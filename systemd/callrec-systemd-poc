# RABBIT MQ

## Upgrade rabbitMQ 

- wanted:  at least 3.63 (newest 3.65), because of systemd support; 
- current: rabbitmq-server-3.2.1-1.noarch.rpm
- question: docker? (it is possible)


## Write Unit file
in: /lib/systemd/system/

helpful (docker):
- http://container-solutions.com/running-docker-containers-with-systemd/
- actual: https://hub.docker.com/_/rabbitmq/
- old: https://github.com/dockerfile/rabbitmq

## Rewrite validation scripts/logic

callrec/StartupScripts/src/main/scripts/scripts/reinitialize_amqp.sh



# SLR

- multiinstance does not work, due to using the same AMQP queues/topics




# Risks:

- journalctl : cannot clear logs
- difference between $VAR and ${VAR}
  - see "Command lines" section: https://www.freedesktop.org/software/systemd/man/systemd.service.html
  - VAR="x x" => echo $VAR -> echo x x; echo ${VAR} -> echo "x x"
- echo under user "callrec" does not work
- I don't know if stdout will be redirected




# Multiple instances, systemd

https://www.digitalocean.com/community/tutorials/understanding-systemd-units-and-unit-files

- template:
<service_name>@<argument>.service

%i passes the argument, specially formatted (escaped)
%I passes the argument verbatim without escaping


1. idea: the argument will not be a number, but config name
  (similar works e.g. openvpn)

Changes required:
- there can be multiple environment files
- command line SLR parameters should be transferred to
  config file (e.g. connectionString, basically all of them)










# install callREC on CentOS7

The system's copy of unit files are generally kept in the /lib/systemd/system directory. When software installs unit files on the system, this is the location where they are placed by default.

## how to override systemd units

The correct way to do this is to create a directory named after the unit file with .d appended on the end. So for a unit called example.service, a subdirectory called example.service.d could be created. Within this directory a file ending with .conf can be used to override or extend the attributes of the system's unit file.

## types of units

- apparent from suffix

.service - application
.socket - IPC, FIFO buffer. Always have also .service counterpart
.device - managed by udev or sysfs
.mount - named as mount-path with dashes instead of slashes
.automount - must have matching .mount
.swap - swap space. Name must reflect the device or file
.target - synchronization points of other units

## values in unit directives

In general, systemd allows for easy and flexible configuration. For example, multiple boolean expressions are accepted (1, yes, on, and true for affirmative and 0, no off, and false for the opposite answer). Times can be intelligently parsed, with seconds assumed for unit-less values and combining multiple formats accomplished internally.


